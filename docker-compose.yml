services:
  wqp-frost:
    container_name: wqp-frost
    build:
      context: ./docker/frost
      dockerfile: Dockerfile
    platform: linux/amd64
    environment:
      - serviceRootUrl=${WQP_URL}/FROST-Server
      - persistence_db_url=jdbc:postgresql://wqp-database:5432/sensorthings
      - persistence_db_username=sensorthings
      - persistence_db_password=ChangeMe
    depends_on:
      - wqp-database

  wqp-database:
    container_name: wqp-database
    build:
      context: ./docker/database
    environment:
      - POSTGRES_DB=sensorthings
      - POSTGRES_USER=sensorthings
      - POSTGRES_PASSWORD=ChangeMe
    volumes:
      - postgis_volume:/var/lib/postgresql/data

  wqp-pygeoapi:
    container_name: wqp-pygeoapi
    build:
      context: docker/pygeoapi
    depends_on:
      - wqp-frost
    environment:
      - API_URL=${WQP_URL}/oapi
      - API_BACKEND_URL=http://wqp-frost:8080/FROST-Server/v1.1
      - SCRIPT_NAME=/oapi

  wqp-ui:
    image: hub2box-ui:wqp
    container_name: wqp-ui
    depends_on:
      - wqp-pygeoapi
    environment:
      - WIS2BOX_URL=${WQP_URL}
      - WIS2BOX_API_URL=${WQP_URL}/oapi
      - serviceRootUrl=${WQP_URL}/FROST-Server

  wqp-proxy:
    container_name: wqp-proxy
    build:
      context: docker/nginx
    restart: always
    depends_on:
      - wqp-ui
    ports:
      - 8888:80

  wqp-dagster:
    container_name: wqp-dagster
    build:
      # have to use . as context so we can get requirements.txt in the context but
      # also have it at the root for local dev
      context: .
      dockerfile: ./docker/dagster/Dockerfile
    ports:
      - 3000:3000
    restart: always
    environment:
      - SLACK_BOT_TOKEN
    deploy:
      resources:
        limits:
          cpus: "7"
          memory: 4GB

    # only spin up the docker container for dagster if we are in production
    # otherwise we want to use uv with hot reloading using dagster dev
    profiles: [production]

  wqp-container-monitor:
    build:
      context: ./docker/container_monitor
    container_name: wqp-container-monitor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SLACK_BOT_TOKEN
      # NOTE, no # needed here
      - SLACK_CHANNEL_NAME=cgs-iow-bots
      - SLACK_BOT_NAME=Water Quality Interoperability Experiment bot
      - SLACK_BOT_AVATAR=https://cida.usgs.gov/wsgi/ngwmn_ui/static/img/provider_logos/owrd_logo.50b3448a.png
    # Don't monitor containers in the dev env or CI/CD
    profiles: [production]

volumes:
  postgis_volume:
